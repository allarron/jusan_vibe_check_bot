#!/usr/bin/env python
# -*- coding: utf-8 -*-

import logging

from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, CallbackContext
from telegram import  InlineKeyboardButton, InlineKeyboardMarkup, Update

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

usersChatId = []

def start(update, context):
    usersChatId.append({'id' : update.message.chat.id, 'username': update.message.chat.username})
    
    startText = "–ü—Ä–∏–≤–µ—Ç, –ø–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:"
    keyboard = [
        [
            InlineKeyboardButton("üòÅ", callback_data='happy'),
            InlineKeyboardButton("üòã", callback_data='sweets'),
            InlineKeyboardButton("üò°", callback_data='angry')
        ],

        [
            InlineKeyboardButton("ü§í", callback_data='sick'),
            InlineKeyboardButton("üò≠", callback_data='cry'),
            InlineKeyboardButton("üò±", callback_data='shook')
        ], 
        
        [
            InlineKeyboardButton("üçΩ", callback_data='starved'),
            InlineKeyboardButton("üòñ", callback_data='unwell'),
            InlineKeyboardButton("‚òï", callback_data='tea')
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(startText, reply_markup= reply_markup)

def help(update, context):
    update.message.reply_text('Help!')


def echo(update, context):
    update.message.reply_text(update.message.text)


def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)

def button(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    kek = list({v['id']:v for v in usersChatId}.values())

    if (update.callback_query.message.chat.username):
        username = update.callback_query.message.chat.username
    else:
        username = "—É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"
    mention = f"[ {username} ](tg://user?id={str(update.callback_query.message.chat.id)})"
    message = ''
    sticker = ''

    match query.data:
        case 'happy': 
            message = f"{mention} —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ"
            sticker = "CAACAgIAAxkBAAP2YkNGpY0F-7gDz41sMGI1QsL3AQ0AAmcPAAJN4hlJZYQBM89MqZIjBA"
        case 'sweets': 
            message = f"—É {mention} –µ—Å—Ç—å –≤–∫—É—Å–Ω—è—à–∫–∏, –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω —Ö–æ—á–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è"
        case 'angry': 
            message = f"{mention} —Å–µ–π—á–∞—Å –Ω–∞ –≥—Ä–∞–Ω–∏ —Å—Ä—ã–≤–∞ - –ª—É—á—à–µ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"
            sticker = "CAACAgIAAxkBAAP3YkNHooZt1XsYqpDMVYUrZVrsGr4AAoYXAAIMMRFJpqr6orGvWRsjBA"
        case 'sick': 
            message = f"{mention} —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –Ω–µ–≤–∞–∂–Ω–æ - –Ω–µ –æ—Ç–∫–∞–∑–∞–ª—Å—è –±—ã –æ—Ç –≤–∫—É—Å–Ω—è—à–µ–∫"
        case 'cry': 
            message = f"—É {mention} –≥–æ—Ä—è—Ç –¥–µ–¥–ª–∞–π–Ω—ã - "
            sticker = "CAACAgIAAxkBAAP4YkNHyjbmdHuTFvLY5tq1rnnSWwgAArMRAAKESJFJt-GUmEZTeu4jBA"
        case 'shook': 
            message = f"{mention} –≤ –∫—É–ª—å—Ç—É—Ä–Ω–æ–º —à–æ–∫–µ"
            sticker = "CAACAgIAAxkBAAP5YkNH4wAB1o9m-re2jNpelq3-JC0wAAK5EAACJW4YSYtyK3DI_g-mIwQ"
        case 'unwell': 
            message = f"{mention} –ø–æ–¥–∞–≤–∏–ª—Å—è –≥—Ä—É—Å—Ç—å—é - –Ω–µ—Å–∏—Ç–µ –µ–º—É —á–∞—à–∫—É —á–∞—è –∏ –∫–æ–Ω—Ñ–µ—Ç—ã"
            sticker = "CAACAgIAAxkBAAP6YkNH--Tx-b3nFwfnmBpEuNsQmtUAAmIFAAI_lcwKQIh5F4bgTIwjBA"
        case 'tea': 
            message = f"{mention} –∑–æ–≤–µ—Ç –≤—Å–µ—Ö –Ω–∞ —á–∞–π - –®”ò–ô“í–ê–ê–ê, –®”ò–ô –Ü–®–ï–ú–Ü–ó"
        case 'starved': 
            message = f"{mention} –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª—Å—è –∏ –∫—Ä–∞–¥–µ—Ç—Å—è –Ω–∞ –∫—É—Ö–Ω—é"
            sticker = "CAACAgIAAxkBAAP7YkNIKfmjvPZVI-ghKP11CBn3P-AAAnwqAALgo4IHkNG4BzV321kjBA"

    

    for user in kek:
        context.bot.send_message(chat_id=user['id'], text=message, parse_mode="Markdown")
        if sticker != '':
            context.bot.send_sticker(chat_id=user['id'], sticker=sticker)
        


def main():
    updater = Updater("5141127153:AAG3F8jvy4Nr_PN5nEJjB282ZRl1FbWKG_k", use_context=True)

    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help))
    dp.add_handler(MessageHandler(Filters.text, echo))
    dp.add_handler(CallbackQueryHandler(button))
    dp.add_error_handler(error)
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()